///////////////////////////////////////////////////////////////////////////////
// FILE: hittable.h
//
// AUTHORS:
// Joseph Gibson / <joseph.gibson@nasa.gov>
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
/// @file
///
/// @brief  Defines a surface or volume that a ray can hit
///////////////////////////////////////////////////////////////////////////////

#ifndef HITTABLE_H
#define HITTABLE_H

///////////////////////////////////////////////////////////////////////////////
// INCLUDES
///////////////////////////////////////////////////////////////////////////////
#include "vec3.h"
#include "ray.h"

///////////////////////////////////////////////////////////////////////////////
// CLASSES
///////////////////////////////////////////////////////////////////////////////
struct HitRecord {
    float t;
    vec3 p;
    vec3 normal;
};

class Hittable {
public:
    virtual bool hit(const Ray & r, const float t_min, const float t_max, HitRecord & record) const = 0;
};

#endif//HITTABLE_H
