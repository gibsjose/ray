///////////////////////////////////////////////////////////////////////////////
// FILE: hittable_list.cpp
//
// AUTHORS:
// Joseph Gibson / <joseph.gibson@nasa.gov>
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
/// @file
///
/// @brief  Defines a list of surfaces or volumes that a ray can hit
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// INCLUDES
///////////////////////////////////////////////////////////////////////////////
#include "hittable_list.h"

///////////////////////////////////////////////////////////////////////////////
// METHODS
///////////////////////////////////////////////////////////////////////////////
bool HittableList::hit(const Ray & r, const float t_min, const float t_max, HitRecord & record) const {
    HitRecord temp_record;
    bool hit_anything = false;

    double closest_so_far = t_max;

    for (uint32_t i = 0; i < size; ++i) {
        if (list[i]->hit(r, t_min, t_max, temp_record)) {
            hit_anything = true;
            closest_so_far = temp_record.t;
            record = temp_record;
        }
    }

    return hit_anything;
}
