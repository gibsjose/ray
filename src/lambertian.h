///////////////////////////////////////////////////////////////////////////////
// FILE: lambertian.h
//
// AUTHORS:
// Joseph Gibson / <joseph.gibson@nasa.gov>
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
/// @file
///
/// @brief  Lambertian material class
///////////////////////////////////////////////////////////////////////////////

#ifndef LAMBERTIAN_H
#define LAMBERTIAN_H

///////////////////////////////////////////////////////////////////////////////
// INCLUDES
///////////////////////////////////////////////////////////////////////////////
#include "material.h"
#include "utilities.h"

///////////////////////////////////////////////////////////////////////////////
// CLASSES
///////////////////////////////////////////////////////////////////////////////
class Lambertian : public Material {
public:
    Lambertian(const vec3 & a) : albedo(a) {}

    virtual bool scatter(const Ray & ray, const HitRecord & record, vec3 & attenuation, Ray & scattered) const {
        vec3 target = record.p + record.normal + RandomInUnitSphere();
        scattered = Ray(record.p, target - record.p);
        attenuation = albedo;
        return true;
    }

    vec3 albedo;    ///< Measure of diffuse reflection
};

#endif//LAMBERTIAN_H
