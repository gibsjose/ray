///////////////////////////////////////////////////////////////////////////////
// FILE: sphere.h
//
// AUTHORS:
// Joseph Gibson / <joseph.gibson@nasa.gov>
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
/// @file
///
/// @brief  Defines a sphere object
///////////////////////////////////////////////////////////////////////////////

#ifndef SPHERE_H
#define SPHERE_H

///////////////////////////////////////////////////////////////////////////////
// INCLUDES
///////////////////////////////////////////////////////////////////////////////
#include "hittable.h"
#include "material.h"

///////////////////////////////////////////////////////////////////////////////
// CLASSES
///////////////////////////////////////////////////////////////////////////////
class Sphere: public Hittable {
public:
    Sphere() {}
    Sphere(vec3 c, const float r, Material * m): centre(c), radius(r), material(m) {};
    virtual bool hit(const Ray & ray, const float t_min, const float t_max, HitRecord & record) const;

    vec3 centre;            ///< Circle centre point
    float radius;           ///< Circle radius
    Material * material;    ///< Material
};

#endif//SPHERE_H
